---
title: "Veteran Case Study Code"
author: "Elliott Serna"
format: html
---

## Census ACS Rental Data

```{r}

library(tidycensus)

# Set your Census API key
census_api_key("d20dd763c7792022d82cedcf75f1346ed6710a39", install = TRUE, overwrite = TRUE)

# Define FIPS code for Pasadena, TX (city-level)
pasadena_fips <- "4856000"  # FIPS code for Pasadena city, Texas

# Define the years you want to pull data for (e.g., 2015-2021)
years <- 2015:2021

# Create an empty list to store the data
all_rent_data <- list()

# Loop over the years and pull data for each year
for (year in years) {
  # Pull median gross rent data (DP04_0134E) from ACS 5-year estimates (Table DP04)
  rent_data_year <- get_acs(
    geography = "place",  # Requesting data for places
    variables = c("DP04_0134E"),  # Median rent data
    geoids = pasadena_fips,  # The FIPS code for Pasadena, TX
    year = year,            # Specify the year
    survey = "acs5",        # ACS 5-year estimates
    output = "wide",        # Format output as wide
    key = "d20dd763c7792022d82cedcf75f1346ed6710a39"  # Your Census API key
  )
  
  # Store the data in the list, indexed by the year
  all_rent_data[[as.character(year)]] <- rent_data_year
}

# Combine all the yearly data into one data frame
combined_rent_data <- bind_rows(all_rent_data, .id = "year")

# View the first few rows of the combined data
print(head(combined_rent_data))

# Plot the median rent data over time using ggplot2
ggplot(combined_rent_data, aes(x = year, y = estimate)) +
  geom_line() +
  geom_point() +
  labs(
    title = "Median Rent in Pasadena, TX (2015-2021)",
    x = "Year",
    y = "Median Rent ($)"
  ) +
  theme_minimal()

# Optional: Save the plot to a file (e.g., PNG or PDF)
ggsave("median_rent_pasadena_tx_2015_2021.png")

```
```{r}

# Define the ACS table for household income: S1901 (Income in the Past 12 Months)
# We'll pull this for the 5-year estimates (e.g., 2015-2021)
income_data <- get_acs(
  geography = "place",        # Pull data for a specific place (Pasadena, TX)
  table = "S1901",            # Table for Income Distribution
  geoids = pasadena_fips,     # FIPS code for Pasadena, TX
  year = 2021,                # Year of data (you can change it to any year within the 5-year estimates)
  survey = "acs5",            # ACS 5-year estimates
  output = "wide",            # Wide format for easy viewing
  key = "d20dd763c7792022d82cedcf75f1346ed6710a39"  # Your Census API key
)

# View the raw data
print(head(income_data))

# Preprocessing the data to create a distribution plot
# Extract the income categories (S1901_001e, S1901_002e, ..., S1901_012e are the household counts for each income range)
income_data_clean <- income_data %>%
  select(
    geoid,  # FIPS code for Pasadena, TX
    contains("S1901_")  # Select all income categories (S1901_001e to S1901_012e)
  ) %>%
  pivot_longer(cols = starts_with("S1901"), names_to = "income_bracket", values_to = "households") %>%
  mutate(
    income_bracket = case_when(
      income_bracket == "S1901_001e" ~ "Total",
      income_bracket == "S1901_002e" ~ "<$10,000",
      income_bracket == "S1901_003e" ~ "$10,000-$14,999",
      income_bracket == "S1901_004e" ~ "$15,000-$24,999",
      income_bracket == "S1901_005e" ~ "$25,000-$34,999",
      income_bracket == "S1901_006e" ~ "$35,000-$49,999",
      income_bracket == "S1901_007e" ~ "$50,000-$74,999",
      income_bracket == "S1901_008e" ~ "$75,000-$99,999",
      income_bracket == "S1901_009e" ~ "$100,000-$149,999",
      income_bracket == "S1901_010e" ~ "$150,000-$199,999",
      income_bracket == "S1901_011e" ~ "$200,000+",
      TRUE ~ income_bracket
    )
  )

# Plotting the income distribution using ggplot2
ggplot(income_data_clean, aes(x = income_bracket, y = households)) +
  geom_bar(stat = "identity", fill = "steelblue") +
  coord_flip() +  # Flip the coordinates for better readability
  labs(
    title = "Household Income Distribution in Pasadena, TX (2021)",
    x = "Income Bracket",
    y = "Number of Households"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Optional: Save the plot to a file (e.g., PNG or PDF)
ggsave("income_distribution_pasadena_tx_2021.png")

```

## Income Distribution

```{r}

# Set seed for reproducibility
set.seed(123)

# Define income ranges and percentages
income_ranges <- list(
  "<$10,000" = c(0, 10000),
  "$10,000-$14,999" = c(10000, 14999),
  "$15,000-$24,999" = c(15000, 24999),
  "$25,000-$34,999" = c(25000, 34999),
  "$35,000-$49,999" = c(35000, 49999),
  "$50,000-$74,999" = c(50000, 74999),
  "$75,000-$99,999" = c(75000, 99999),
  "$100,000-$149,999" = c(100000, 149999),
  "$150,000-$199,999" = c(150000, 199999),
  "$200,000+" = c(200000, 300000) # Assume a cap for $200k+
)

percentages <- c(6.2, 5.8, 8.0, 11.1, 9.6, 19.2, 13.6, 15.4, 4.7, 6.5)

# Generate synthetic income data
n <- 10000 # Number of data points to simulate
income_data <- numeric(0)

for (i in seq_along(income_ranges)) {
  range <- income_ranges[[i]]
  size <- round(n * percentages[i] / 100)
  income_data <- c(income_data, runif(size, range[1], range[2]))
}

# Kernel density estimate plot
library(ggplot2)

ggplot(data = data.frame(income = income_data), aes(x = income)) +
  geom_density(fill = "blue", alpha = 0.5) +
  labs(
    title = "Kernel Density Estimate of Income Distribution",
    x = "Income (USD)",
    y = "Density"
  ) +
  theme_minimal()


```

